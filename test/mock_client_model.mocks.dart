// Mocks generated by Mockito 5.4.4 from annotations
// in client_manager/test/mock_client_model.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:client_manager/core/models/client_model.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClientModel_0 extends _i1.SmartFake implements _i2.ClientModel {
  _FakeClientModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ClientModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockClientModel extends _i1.Mock implements _i2.ClientModel {
  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  String get email => (super.noSuchMethod(
        Invocation.getter(#email),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#email),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#email),
        ),
      ) as String);

  @override
  List<String> get tags => (super.noSuchMethod(
        Invocation.getter(#tags),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  String toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.method(
            #toJson,
            [],
          ),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.method(
            #toJson,
            [],
          ),
        ),
      ) as String);

  @override
  _i2.ClientModel copyWith({
    int? id,
    String? name,
    String? email,
    List<String>? tags,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #id: id,
            #name: name,
            #email: email,
            #tags: tags,
          },
        ),
        returnValue: _FakeClientModel_0(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #id: id,
              #name: name,
              #email: email,
              #tags: tags,
            },
          ),
        ),
        returnValueForMissingStub: _FakeClientModel_0(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #id: id,
              #name: name,
              #email: email,
              #tags: tags,
            },
          ),
        ),
      ) as _i2.ClientModel);
}
